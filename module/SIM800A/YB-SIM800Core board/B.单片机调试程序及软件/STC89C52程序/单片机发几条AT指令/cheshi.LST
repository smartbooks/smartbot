C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE CHESHI
OBJECT MODULE PLACED IN cheshi.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE cheshi.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //==**********************************************************
   2          //--软件功能, 读一条英文短信，但不回复，  START  END  两条，可以控制继电器
   3          //---   可使用单片机  要求 16K ROM 256 RAM 及以上 8位标准单片机   STC SST SM W78E单片机
   4          //--   TC35 SIM300 GTM900 EM310   波特率 9600
   5          //100%不支持  AT89S51 W78E51及其它RAM为 128B的单片机
   6          //============================================================
   7          #include <cheshi.h>
   8          //#include <lcd.h>
   9          uchar data int_case;    //中断标志
  10          #define MAX_TM   100         // AT指收发数组最大缓冲
  11          #define MAX_T  35
  12          uchar idata uart_buff[MAX_TM]; //通信程序中的缓冲
  13          uchar idata  receive_count;    //发送与接收 数组指针
  14          
  15          uchar data para_temp[MAX_T];     //多用临时用
  16          uchar data read_tmp;             ///读电话本号参数
  17          uchar data sms_num_tmp;                 ///读短信号码参数
  18          uchar data sms_tmp;                     ///短信处理参数代码
  19          uchar idata TEL_temp[15];   //存对方号码，
  20          #define IO_OUT                  P3_6
  21          
  22          
  23          //－－－定时用－－－－－－－－－－－
  24          uint  data timercount;          //50MS定时器,
  25          uchar data timer_1S_cnt;
  26          uchar data timer_10S_cnt;
  27          uchar data timer_S_cnt;
  28          //--------------------
  29          uchar data ring_cnt;    //振铃用
  30           bit ring_bit  ;  // 电话呼入　2
  31          
  32          
  33          
  34          
  35          
  36            /*
  37          *********************************************************************************************************
  38          ** 函数名称 dmsec()
  39          ** 函数功能 ：延时 NS
  40          ** 入口参数 ：
  41          ** 出口参数 :
  42          *********************************************************************************************************
  43          */
  44          //---延时S------------------------------
  45          void dmsec (unsigned int count)
  46          {
  47   1              unsigned int i;
  48   1              while (count)
  49   1              {
  50   2                      #if   CPU_TYPE2==W78E58
  51   2                 i =115;
  52   2              #elif  CPU_TYPE2==STC89E58
                         i =300;
                      #endif
  55   2      
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 2   

  56   2                      while (i>0) i--;
  57   2                      count--;
  58   2          }
  59   1      }
  60          
  61          
  62          //------------------------
  63          //----------------------
  64          /*
  65          *********************************************************************************************************
  66          ** 函数名称     Int_Timer0()
  67          ** 函数功能             定时器中断位,是整个程序的心跳,如果停止,程序会死机
  68          ** 全局变量或数组:
  69          
  70          ** 入口参数      ：
  71          ** 出口参数     ：
  72          *********************************************************************************************************
  73          */
  74          
  75          void  Int_Timer0(void) interrupt 1 using 3
  76          {
  77   1           TH0 = 0xB8;
  78   1               TL0 = 0x00; //20ms的时钟基准
  79   1      
  80   1         timer_1S_cnt++;   timercount++;
  81   1         if(timer_1S_cnt==50)    //20×50=1000MS  =1S
  82   1          { timer_10S_cnt++; timer_1S_cnt=0;
  83   2            timer_S_cnt++;
  84   2                LED_S0=~LED_S0;
  85   2      
  86   2          }                              //１秒＝１０００毫秒
  87   1          if(timer_10S_cnt==60)   //60S
  88   1          {
  89   2                 timer_10S_cnt=0;
  90   2      
  91   2              }
  92   1      
  93   1      //---------------------------------------------------------------------------------
  94   1      
  95   1      }
  96          
  97          /*
  98          *********************************************************************************************************
  99          ** 函数名称     Int_Uart()
 100          ** 函数功能              TC35 的命令列表,与中断服务程序
 101          ** 全局变量或数组:   receive_count 接收指针      uart_buff
 102                                ring_bit  ring_cnt
 103          ** 入口参数      ：
 104          ** 出口参数     ： 1-成功      0-失败
 105          *********************************************************************************************************
 106          */
 107          
 108          void  Int_Uart(void) interrupt 4 using 3  //串口的中断程序
 109          {
 110   1      
 111   1              if(RI) //命令方式
 112   1          {
 113   2      
 114   2                      RI=0;
 115   2      
 116   2               if((receive_count<MAX_TM-1))//没有发送时才能进行接收
 117   2                      {       //所有的命令返回都是处于 0x0A [Result] 0x0D 之间,其他命令,不会出现这种情况
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 3   

 118   3                      uart_buff[receive_count++]=SBUF;
 119   3                     //0D 0A 32 0D 0A
 120   3                      if((receive_count==5)&&(uart_buff[0]==0x0d&&uart_buff[1]==0x0A))
 121   3                      {
 122   4                         if(uart_buff[2]=='2')    //电话呼入
 123   4                                 {    ring_bit=1;  ring_cnt++;
 124   5                                     receive_count=0;
 125   5                                 }
 126   4                      }
 127   3                      }
 128   2                       else
 129   2                       {
 130   3                               return;
 131   3                       }
 132   2      
 133   2      
 134   2            //------------------------------------
 135   2      
 136   2              }//End of if(RI)
 137   1      }
 138          
 139          
 140          
 141            /*
 142          *********************************************************************************************************
 143          ** 函数名称 Initialize_Model()
 144          ** 函数功能 ： 模块初始化
 145          ** 入口参数 ：ptr1_at --uart_buff AT指令发送用 ptr1_code -para_temp 参数内容
 146          **             全局 变最    ptr1_at, uart_buff, receive_count
 147          ** 出口参数 :
 148          *********************************************************************************************************
 149          */
 150          
 151          void Initialize_Model(char* ptr1_at,char* ptr1_code)    //初始化　PIN检测
 152          {
 153   1              uchar i ,j;
 154   1              P0=1;
 155   1               BELL=0;  for(i=0;i<=100;i++) dmsec(1);  BELL=1;
 156   1         //  GPS_READ(ptr1_at,ptr1_code);
 157   1      
 158   1           ptr1_code[0]=0;
 159   1              for(j=0;j<15;j++)
 160   1              {   //
 161   2                      Send_AT_Command(AT_E,ptr1_at);
 162   2                      Send_AT_Command(AT_INIT,ptr1_at);
 163   2                      if(ptr1_at[1]==0x0d&&ptr1_at[0]==0x30)
 164   2                      {
 165   3                         P0_3=1;
 166   3                         break;
 167   3                      }
 168   2              else if(ptr1_at[receive_count-1]==0x0d&&ptr1_at[receive_count-2]=='0')
 169   2               {  break;}
 170   2      
 171   2                      if(i==1)   //开机
 172   2                      {   IO_IGT=0;
 173   3                          for(i=0;i<=200;i++) dmsec(30);
 174   3                          IO_IGT=1;
 175   3                          timercount=0; while(timercount<60);
 176   3                          timercount=0; while(timercount<60);
 177   3                      }
 178   2      
 179   2      
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 4   

 180   2                 timercount=0; while(timercount<60);
 181   2                  timercount=0; while(timercount<60);
 182   2      
 183   2          }
 184   1      
 185   1      
 186   1      
 187   1      
 188   1      
 189   1      
 190   1              Send_AT_Command(AT_IPR,ptr1_at);//波特率  AT+IPR=9600
 191   1          if(ptr1_at[1]==0x0d&&ptr1_at[0]==0x30)
 192   1                      {
 193   2                         P0_4=1;
 194   2      
 195   2                      }
 196   1              Send_AT_Command(AT_CGMM,ptr1_at);  //模块型号 AT+CGMM
 197   1      
 198   1           BELL=0;  for(i=0;i<=100;i++) dmsec(1);  BELL=1;
 199   1      
 200   1      }
 201          
 202          
 203            /*
 204          *********************************************************************************************************
 205          ** 函数名称 Sys_Init()
 206          ** 函数功能 ： 单片机初始化
 207          ** 入口参数 ：
 208          **             全局 变最  timer_1S_cnt  receive_count
 209          ** 出口参数 :
 210          *********************************************************************************************************
 211          */
 212          
 213          void  Sys_Init(void)//话机启动的初始化程序,包含键盘与定时器,串口等
 214          {
 215   1                              //TH0=(65536-46080)/256;//重新装入定时25mS的初值到TH0,TL0     56320
 216   1                              //TL0=(65536-46080)%256;
 217   1                              //65536-(11.0592/12)*20MS*1000=To    18432     47104
 218   1                              //1ms定时
 219   1                              //11.0592/12 = 0.9216 M (记数频率)
 220   1                              //1ms记数 921.6次
 221   1                              //16位 2^16 - x = 922 x=64614 FC66
 222   1                              //定时器里不断放fc66，不用怀疑51定时器得到的 1ms的精确性吗
 223   1      
 224   1              TH0 = 0xB8;
 225   1              TL0 = 0x00; //20ms的时钟基准
 226   1      
 227   1        //串口中断
 228   1          TI=0; RI=0;
 229   1          SCON=0x50;                  //选用方式1
 230   1          TMOD=0x20;
 231   1          TMOD = (TMOD & 0xf0) | 1;//MODE 1
 232   1         // TH1=0xe8;              //波特率为9600
 233   1         // TL1=0xe8;
 234   1         TH1=0xfd;              //波特率为9600
 235   1         TL1=0xfd;
 236   1          PCON=0x00;            //倍频0x80
 237   1          IE = 0xb0;          // EA XX ET2 ES ET0 EX0 ET1 EX1
 238   1          TR1=1;              //enable TIMER1
 239   1      
 240   1          ES=1;  //开串口开断
 241   1          TR0=1; //串口接收中断
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 5   

 242   1          ET0=1;  //T0 中断
 243   1          ET1=0;  // T1 中断
 244   1          EA=1;
 245   1          P0=0xFF;
 246   1          P1=0xFF;
 247   1          P2=0xFF;
 248   1          P3=0xFF;
 249   1         // P4=0xff;
 250   1          timer_1S_cnt=0;receive_count=0;
 251   1          IO_IGT=1;
 252   1      
 253   1      
 254   1      
 255   1      }
 256           //======================================================
 257          //这里为AT指令处理区,所有的AT指令都在这时对uart_buff数组进行赋值,并发送出去,
 258          //-正常情况下,AT指令反回也会在这里接收完
 259            //------------------------
 260            //-----------------------
 261            ///==========================================
 262          /*
 263          *********************************************************************************************************
 264          ** 函数名称      ：Send_AT_Command()
 265          ** 函数功能              ：串口AT指令发送前处理,
 266          ** 全局变量或数组:   receive_count 接收指针
 267          ** 入口参数      ： type =ID,  转向所有  AT指令 字符串
 268                                                  str_at- uart_buff   str_code -para_temp
 269          **                      *str_at=要复制的内容/转AT指令
 270          **                      *str_code 与*str_at合并的参数 //AT指令参数
 271          ** 出口参数     ：  1- 成功,  0- 失败
 272          *********************************************************************************************************
 273          */
 274          uchar  Send_AT_Command( uchar type,uchar *str_at)      //发送ＡＴ指令
 275          //拨号时号码放在phone.number
 276          //其他用para_temp
 277          {
 278   1              uint   i;
 279   1      
 280   1          switch(type)
 281   1          {
 282   2      
 283   2            case AT_CPIN:             //检查当前是否要输入PIN码
 284   2              strcpy(str_at,"AT+CPIN?");
 285   2              break;
 286   2           //  AT_E
 287   2             case AT_E:               //ATE0 功能关回显  ATE1 开回显
 288   2              strcpy(str_at,"ATE0");
 289   2              break;
 290   2            case AT_INIT:             //ATV0  回复方式 30 0D  ATV1 回复方式  OK
 291   2              strcpy(str_at,"ATV0");
 292   2              break;
 293   2              //0D 0A 54 43 33 35 0D 0A
 294   2            case   AT_CGMM:   //模块版型号
 295   2              strcpy(str_at,"AT+CGMM");
 296   2              break;
 297   2      
 298   2      
 299   2           //----------------------------------------------------
 300   2      
 301   2               //----------------------------------------------------------
 302   2      
 303   2           //-----------------------------------------------
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 6   

 304   2            case AT_COMMAND:
 305   2              break;
 306   2            default:
 307   2              receive_count=0;
 308   2              return(TRUE);
 309   2          }
 310   1          ES=1;
 311   1          strcat(str_at,"\x0d\x00");//在命令后加入CR
 312   1          RI=0;                                       //清除接收标志
 313   1          TI=0;
 314   1         //------------------------------
 315   1          for(i=0;i<MAX_TM;i++)
 316   1              {       if(str_at[i]==0) break;
 317   2                      SBUF=str_at[i];
 318   2                      while(!TI);
 319   2                      TI=0;
 320   2              }
 321   1         //---------------------
 322   1         receive_count=0;
 323   1         str_at[0]=0; str_at[1]=0;str_at[2]=0;
 324   1         i=0; timer_1S_cnt=0;
 325   1         do{
 326   2             dmsec(3);
 327   2             if(receive_count>1)
 328   2             {   //   dmsec(50);
 329   3                  timercount=0; while(timercount<30);
 330   3                  break;
 331   3             }
 332   2      
 333   2          }while(timer_1S_cnt<3);
 334   1      
 335   1          return(TRUE);
 336   1      
 337   1      
 338   1      
 339   1      }
 340          
 341          
 342          /******************************************/
 343          void main(void)
 344          {
 345   1      
 346   1               Sys_Init();
 347   1      
 348   1              Initialize_Model(uart_buff,para_temp);//进行初始化
 349   1      
 350   1      
 351   1              receive_count=0;
 352   1      
 353   1      
 354   1              while(1)
 355   1              {
 356   2                      //-----------查询1到20条中的短信,只要有短信就处理------------------------------------------
 357   2                      Send_AT_Command(AT_CGMM,uart_buff);  //模块型号 AT+CGMM
 358   2           if(uart_buff[receive_count-1]==0x0d&&uart_buff[receive_count-2]==0x30)
 359   2                      {
 360   3                         P0_6=~P0_6;
 361   3      
 362   3                      }
 363   2                  timercount=0; while(timercount<60);
 364   2                      timercount=0; while(timercount<60);
 365   2      
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 7   

 366   2      
 367   2              }
 368   1      
 369   1      
 370   1      }
 371          
 372          
 373          
 374          
 375          
 376          
 377          
 378          
 379          
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          
 404          
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          
 422          
 423          
 424          
 425          
 426          
 427          
C51 COMPILER V7.50   CHESHI                                                                03/28/2011 21:52:31 PAGE 8   

 428          
 429          
 430          
 431          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    837    ----
   CONSTANT SIZE    =     30    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45      11
   IDATA SIZE       =    116    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
