C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE CHESHI
OBJECT MODULE PLACED IN cheshi.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE cheshi.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //==**********************************************************
   2          //--------上海龙兰新 HS-LLXDZ----------------------------------------------------
   3          //---------------程序员:付成龙
   4          //--软件功能, 读一条英文短信，但不回复，  START  END  两条，可以控制继电器
   5          //---   可使用单片机  要求 16K ROM 256 RAM 及以上 8位标准单片机   STC SST SM W78E单片机
   6          //--   TC35 SIM300 GTM900 EM310   波特率 9600
   7          //100%不支持  AT89S51 W78E51及其它RAM为 128B的单片机
   8          //============================================================
   9          #include <cheshi.h>
  10          //#include <lcd.h>
  11          uchar data int_case;    //中断标志
  12          #define MAX_TM   85         // AT指收发数组最大缓冲
  13          #define MAX_T  60
  14          uchar idata uart_buff[MAX_TM]; //通信程序中的缓冲
  15          uchar idata  receive_count;    //发送与接收 数组指针
  16          
  17          uchar data para_temp[MAX_T];     //多用临时用
  18          uchar data read_tmp;             ///读电话本号参数
  19           
  20           uchar idata TEL_temp[13];   //存对方号码，
  21          #define IO_OUT                  P3_6
  22          
  23          
  24          //－－－定时用－－－－－－－－－－－
  25          uint  idata timercount;         //50MS定时器,
  26          uchar idata timer_1S_cnt;
  27          uchar idata timer_10S_cnt;
  28          uchar idata timer_S_cnt;
  29          //--------------------
  30          uchar idata ring_cnt;    //振铃用
  31           bit ring_bit  ;  // 电话呼入　2
  32          
  33          
  34          
  35          
  36          
  37            /*
  38          *********************************************************************************************************
  39          ** 函数名称 dmsec()
  40          ** 函数功能 ：延时 NS
  41          ** 入口参数 ：
  42          ** 出口参数 :
  43          *********************************************************************************************************
  44          */
  45          //---延时S------------------------------
  46          void dmsec (unsigned int count)
  47          {
  48   1              unsigned int i;
  49   1              while (count)
  50   1              {
  51   2                      #if   CPU_TYPE2==W78E58
  52   2                 i =115;
  53   2              #elif  CPU_TYPE2==STC89E58
                         i =300;
                      #endif
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 2   

  56   2      
  57   2                      while (i>0) i--;
  58   2                      count--;
  59   2          }
  60   1      }
  61          
  62          
  63          //------------------------
  64          //----------------------
  65          /*
  66          *********************************************************************************************************
  67          ** 函数名称     Int_Timer0()
  68          ** 函数功能             定时器中断位,是整个程序的心跳,如果停止,程序会死机
  69          ** 全局变量或数组:
  70          
  71          ** 入口参数      ：
  72          ** 出口参数     ：
  73          *********************************************************************************************************
  74          */
  75          
  76          void  Int_Timer0(void) interrupt 1 using 3
  77          {
  78   1           TH0 = 0xB8;
  79   1               TL0 = 0x00; //20ms的时钟基准
  80   1      
  81   1         timer_1S_cnt++;   timercount++;
  82   1         if(timer_1S_cnt==50)    //20×50=1000MS  =1S
  83   1          { timer_10S_cnt++; timer_1S_cnt=0;
  84   2            timer_S_cnt++;
  85   2                LED_S0=~LED_S0;
  86   2      
  87   2          }                              //１秒＝１０００毫秒
  88   1          if(timer_10S_cnt==60)   //60S
  89   1          {
  90   2                 timer_10S_cnt=0;
  91   2      
  92   2              }
  93   1      
  94   1      //---------------------------------------------------------------------------------
  95   1      
  96   1      }
  97          
  98          /*
  99          *********************************************************************************************************
 100          ** 函数名称     Int_Uart()
 101          ** 函数功能              TC35 的命令列表,与中断服务程序
 102          ** 全局变量或数组:   receive_count 接收指针      uart_buff
 103                                ring_bit  ring_cnt
 104          ** 入口参数      ：
 105          ** 出口参数     ： 1-成功      0-失败
 106          *********************************************************************************************************
 107          */
 108          
 109          void  Int_Uart(void) interrupt 4 using 3  //串口的中断程序
 110          {
 111   1      
 112   1              if(RI) //命令方式
 113   1          {
 114   2      
 115   2                      RI=0;
 116   2      
 117   2               if((receive_count<MAX_TM-1))//没有发送时才能进行接收
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 3   

 118   2                      {       //所有的命令返回都是处于 0x0A [Result] 0x0D 之间,其他命令,不会出现这种情况
 119   3                      uart_buff[receive_count++]=SBUF;
 120   3                     //0D 0A 32 0D 0A
 121   3                      if((receive_count==5)&&(uart_buff[0]==0x0d&&uart_buff[1]==0x0A))
 122   3                      {
 123   4                         if(uart_buff[2]=='2')    //电话呼入
 124   4                                 {    ring_bit=1;  ring_cnt++;
 125   5                                     receive_count=0;
 126   5                                 }
 127   4                      }
 128   3                      }
 129   2                       else
 130   2                       {
 131   3                               return;
 132   3                       }
 133   2      
 134   2      
 135   2            //------------------------------------
 136   2      
 137   2              }//End of if(RI)
 138   1      }
 139          
 140          /*********************************************************************
 141           *                  C51中字符串函数的扩充                            *
 142           ** 函数名称    : strsearch ()
 143           ** 函数功能    : 在指定的数组里连续找到相同的内容
 144           ** 入口参数   ： ptr2=要找的内容, ptr1 当前数组
 145           **** 出口参数 ： 0-没有 找到   >1 查找到
 146           *********************************************************************/
 147          
 148          
 149          uchar strsearch(uchar *ptr2,uchar *ptr1_at)//查字符串*ptr2在*ptr1中的位置
 150          //本函数是用来检查字符串*ptr2是否完全包含在*ptr1中
 151          //返回:  0  没有找到
 152          //       1-255 从第N个字符开始相同
 153          {
 154   1      //、    uchar max_length;
 155   1              uchar i,j,k;
 156   1              uchar flag;
 157   1              if(ptr2[0]==0) return(0);
 158   1              flag=0;
 159   1              for(i=0,j=0;i<MAX_TM-2;i++)
 160   1              {
 161   2              if(ptr1_at[i]==ptr2[j])
 162   2              {//第一个字符相同
 163   3                      k=i;
 164   3                      //for(k=i;k<MAX_TM-2;k++,j++)
 165   3                      do {
 166   4                              if(ptr2[j]==0)//比较正确
 167   4                                      return(i+1);               //返回值是整数，不含0
 168   4                              if(ptr1_at[k]!=ptr2[j]) break;
 169   4                              k++;j++ ;
 170   4                      } while(k<MAX_TM-2) ;
 171   3      
 172   3                      j=0;
 173   3              }
 174   2              }
 175   1              return(0);
 176   1      }
 177          
 178          
 179          
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 4   

 180          
 181          
 182            /*
 183          *********************************************************************************************************
 184          ** 函数名称 Initialize_Model()
 185          ** 函数功能 ： 模块初始化
 186          ** 入口参数 ：ptr1_at --uart_buff AT指令发送用 ptr1_code -para_temp 参数内容
 187          **             全局 变最    ptr1_at, uart_buff, receive_count
 188          ** 出口参数 :
 189          *********************************************************************************************************
 190          */
 191          
 192          void Initialize_Model(char* ptr1_at,char* ptr1_code)    //初始化　PIN检测
 193          {
 194   1              uchar i,j;
 195   1           GPS_ON=1;
 196   1               BELL=0;  for(i=0;i<=100;i++) dmsec(1);  BELL=1;
 197   1         //  GPS_READ(ptr1_at,ptr1_code);
 198   1      
 199   1           ptr1_code[0]=0;
 200   1              for(i=0;i<15;i++)
 201   1              {   //进行初始化,并显示  ATE0V0  = ATE0 ATV0   AT_E
 202   2                      Send_AT_Command(AT_E,ptr1_at,0);
 203   2                      Send_AT_Command(AT_INIT,ptr1_at,0);
 204   2                      if(ptr1_at[1]==0x0d&&ptr1_at[0]==0x30)
 205   2                      {  break;}
 206   2              else if(ptr1_at[receive_count-1]==0x0d&&ptr1_at[receive_count-2]=='0')
 207   2               {  break;}
 208   2      
 209   2                      if(i==1)
 210   2                      {   IO_IGT=0;   for(i=0;i<=200;i++) dmsec(30);IO_IGT=1;
 211   3                          timercount=0; while(timercount<60);
 212   3                      }
 213   2      
 214   2      
 215   2                 timercount=0; while(timercount<60);
 216   2      
 217   2          }
 218   1      
 219   1              for(i=0;i<12;i++)
 220   1              {            //读卡  AT+CPIN?
 221   2      
 222   2                        Send_AT_Command(AT_E,ptr1_at,0);
 223   2                               Send_AT_Command(AT_INIT,ptr1_at,0);
 224   2                       Send_AT_Command(AT_CPIN,ptr1_at,0) ;
 225   2                       //如有收到回应进行分析收到的信息,
 226   2                       timercount=0; while(timercount<2);
 227   2                              if(j=strsearch("READY",ptr1_at))
 228   2                                      break;
 229   2      
 230   2                  timercount=0; while(timercount<60);
 231   2              }
 232   1      
 233   1      
 234   1      
 235   1      
 236   1              Send_AT_Command(AT_IPR,ptr1_at,0);//波特率  AT+IPR=9600
 237   1              Send_AT_Command(AT_CGMM,ptr1_at,0);  //模块型号 AT+CGMM
 238   1      
 239   1      
 240   1           timer_S_cnt=0; while(timer_S_cnt<15) ;
 241   1           BELL=0;  for(i=0;i<=100;i++) dmsec(1);  BELL=1;
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 5   

 242   1           Send_AT_Command(AT_CNMI,ptr1_at,0);
 243   1           Send_AT_Command(AT_CMGF0,ptr1_at,0);//AT+CMGF=1
 244   1      }
 245          
 246          
 247            /*
 248          *********************************************************************************************************
 249          ** 函数名称 Sys_Init()
 250          ** 函数功能 ： 单片机初始化
 251          ** 入口参数 ：
 252          **             全局 变最  timer_1S_cnt  receive_count
 253          ** 出口参数 :
 254          *********************************************************************************************************
 255          */
 256          
 257          void  Sys_Init(void)//话机启动的初始化程序,包含键盘与定时器,串口等
 258          {
 259   1                              //TH0=(65536-46080)/256;//重新装入定时25mS的初值到TH0,TL0     56320
 260   1                              //TL0=(65536-46080)%256;
 261   1                              //65536-(11.0592/12)*20MS*1000=To    18432     47104
 262   1                              //1ms定时
 263   1                              //11.0592/12 = 0.9216 M (记数频率)
 264   1                              //1ms记数 921.6次
 265   1                              //16位 2^16 - x = 922 x=64614 FC66
 266   1                              //定时器里不断放fc66，不用怀疑51定时器得到的 1ms的精确性吗
 267   1      
 268   1              TH0 = 0xB8;
 269   1              TL0 = 0x00; //20ms的时钟基准
 270   1      
 271   1        //串口中断
 272   1          TI=0; RI=0;
 273   1          SCON=0x50;                  //选用方式1
 274   1          TMOD=0x20;
 275   1          TMOD = (TMOD & 0xf0) | 1;//MODE 1
 276   1         // TH1=0xe8;              //波特率为9600
 277   1         // TL1=0xe8;
 278   1         TH1=0xfd;              //波特率为9600
 279   1         TL1=0xfd;
 280   1          PCON=0x00;            //倍频0x80
 281   1          IE = 0xb0;          // EA XX ET2 ES ET0 EX0 ET1 EX1
 282   1          TR1=1;              //enable TIMER1
 283   1      
 284   1          ES=1;  //开串口开断
 285   1          TR0=1; //串口接收中断
 286   1          ET0=1;  //T0 中断
 287   1          ET1=0;  // T1 中断
 288   1          EA=1;
 289   1          P0=0xFF;
 290   1          P1=0xFF;
 291   1          P2=0xFF;
 292   1          P3=0xFF;
 293   1         // P4=0xff;
 294   1          timer_1S_cnt=0;receive_count=0;
 295   1          IO_IGT=1;
 296   1      
 297   1      
 298   1      
 299   1      }
 300           //======================================================
 301          //这里为AT指令处理区,所有的AT指令都在这时对uart_buff数组进行赋值,并发送出去,
 302          //-正常情况下,AT指令反回也会在这里接收完
 303            //------------------------
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 6   

 304            //-----------------------
 305            ///==========================================
 306          /*
 307          *********************************************************************************************************
 308          ** 函数名称      ：Send_AT_Command()
 309          ** 函数功能              ：串口AT指令发送前处理,
 310          ** 全局变量或数组:   receive_count 接收指针
 311          ** 入口参数      ： type =ID,  转向所有  AT指令 字符串
 312                                                  str_at- uart_buff   str_code -para_temp
 313          **                      *str_at=要复制的内容/转AT指令
 314          **                      *str_code 与*str_at合并的参数 //AT指令参数
 315          ** 出口参数     ：  1- 成功,  0- 失败
 316          *********************************************************************************************************
 317          */
 318          uchar  Send_AT_Command( uchar type,uchar *str_at ,uchar *str_code)      //发送ＡＴ指令
 319          //拨号时号码放在phone.number
 320          //其他用para_temp
 321          {
 322   1              uint   i;
 323   1               GPS_ON=1;
 324   1          switch(type)
 325   1          {
 326   2      
 327   2            case AT_CPIN:             //检查当前是否要输入PIN码
 328   2              strcpy(str_at,"AT+CPIN?");
 329   2              break;
 330   2           //  AT_E
 331   2             case AT_E:               //ATE0 功能关回显  ATE1 开回显
 332   2              strcpy(str_at,"ATE0");
 333   2              break;
 334   2            case AT_INIT:             //ATV0  回复方式 30 0D  ATV1 回复方式  OK
 335   2              strcpy(str_at,"ATV0");
 336   2              break;
 337   2              //0D 0A 54 43 33 35 0D 0A
 338   2            case   AT_CGMM:   //模块版型号
 339   2              strcpy(str_at,"AT+CGMM");
 340   2              break;
 341   2      
 342   2           case AT_CMGF0:     //SMS 接收方式,
 343   2              strcpy(str_at,"AT+CMGF=0");
 344   2              break;
 345   2          // AT_CNMI
 346   2            case AT_CNMI:    //   AT+CNMI=2,1
 347   2                strcpy(str_at,"AT+CNMI=2,1");
 348   2              break;
 349   2             case  AT_IPR:   // 波特率 9600
 350   2              strcpy(str_at,"AT+IPR=9600"); break;
 351   2      
 352   2              case SMS_CMGL:          //读所有短信
 353   2               strcpy(uart_buff,"AT+CMGL=\"ALL\"");
 354   2             // strcpy(str_at,"AT+CMGL=4");
 355   2            //  strcat(uart_buff,ptr);
 356   2              break;
 357   2      
 358   2      
 359   2      
 360   2             case AT_CPMS:
 361   2               strcpy(str_at,"AT+CPMS=\x22SM\x22");
 362   2              break;  //AT_CPMS
 363   2      
 364   2                case SMS_CMGS:                //写一个短信
 365   2              strcpy(str_at,"AT+CMGS=");    //AT+CMGS= "13818120592"
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 7   

 366   2              strcat(str_at,str_code);
 367   2      
 368   2              break;
 369   2           //----------------------------------------------------
 370   2               case  CMGS_MUB:    //发报警短信内容
 371   2              strcpy(str_at,str_code);
 372   2               break;
 373   2               //----------------------------------------------------------
 374   2      
 375   2           //-----------------------------------------------
 376   2            case AT_COMMAND:
 377   2              break;
 378   2            default:
 379   2              receive_count=0;
 380   2              return(TRUE);
 381   2          }
 382   1          ES=1;
 383   1          strcat(str_at,"\x0d\x00");//在命令后加入CR
 384   1          RI=0;                                       //清除接收标志
 385   1          TI=0;
 386   1         //------------------------------
 387   1          for(i=0;i<MAX_TM;i++)
 388   1              {       if(str_at[i]==0) break;
 389   2                      SBUF=str_at[i];
 390   2                      while(!TI);
 391   2                      TI=0;
 392   2              }
 393   1         //---------------------
 394   1         receive_count=0;
 395   1         str_at[0]=0; str_at[1]=0;str_at[2]=0;
 396   1         i=0; timer_1S_cnt=0;
 397   1         do{
 398   2             dmsec(3);
 399   2             if(receive_count>1)
 400   2             {   //   dmsec(50);
 401   3                  timercount=0; while(timercount<30);
 402   3                  break;
 403   3             }
 404   2      
 405   2          }while(timer_1S_cnt<3);
 406   1      
 407   1      
 408   1      
 409   1          return(TRUE);
 410   1      
 411   1      
 412   1      
 413   1      }
 414          
 415          
 416          /******************************************/
 417          void main(void)
 418          {
 419   1              uchar i,j,y;
 420   1               Sys_Init();
 421   1      
 422   1              Initialize_Model(uart_buff,para_temp);//进行初始化
 423   1              P0=1;
 424   1      
 425   1              receive_count=0;
 426   1       
 427   1              i=0;
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 8   

 428   1      
 429   1              while(1)
 430   1              {
 431   2                      //-----------查询1到20条中的短信,只要有短信就处理------------------------------------------
 432   2      
 433   2                if(i==0)
 434   2                {
 435   3                         //0011000D91683118180295F20008A70A8F66670953719669FF01
 436   3      
 437   3                                         //短信号码长度，如果每加一个中文，长度加２
 438   3                      Send_AT_Command(SMS_CMGS,uart_buff,"25");
 439   3                        strcpy(TEL_temp,"13818120592");
 440   3                      y=0;
 441   3                      strcpy(para_temp,"0011000D9168");
 442   3                      y=12;
 443   3                                      j=0;  //发送对方号码
 444   3                                       //对方手机号码 进行 PDU转换
 445   3                                 // 将TEL_temp里的 13818120592转换3118180295F2后放到 para_temp里
 446   3                                              do
 447   3                                              {
 448   4                                            para_temp[y++]=TEL_temp[j+1];
 449   4                                            para_temp[y++]=TEL_temp[j];
 450   4                                            j=j+2;
 451   4                                            if(TEL_temp[j+1]==0x0d||TEL_temp[j+1]==0)
 452   4                                            { para_temp[y++]='F';
 453   5                                              para_temp[y++]=TEL_temp[j];
 454   5                                              break;
 455   5                                            }
 456   4                                         } while(j<=15);
 457   3                                       para_temp[y]=0;
 458   3                                       strcat(para_temp,"0008A0");//短信格式
 459   3                                       strcat(para_temp,"0A");  //短信长度、５个汉字，10个英文
 460   3                                      //短信内容
 461   3                                      //8BBE 7F6E 6210 529F 0021   设置成功!
 462   3                                   strcat(para_temp,"8BBE7F6E6210529F0021\x1a");
 463   3                      Send_AT_Command(CMGS_MUB,uart_buff,para_temp);
 464   3                        timer_S_cnt=0; while(timer_S_cnt<10);
 465   3                     i=1;
 466   3                }
 467   2      
 468   2      
 469   2      
 470   2      
 471   2      
 472   2      
 473   2              }
 474   1      
 475   1      
 476   1      }
 477          
 478          
 479          
 480          
 481          
 482          
 483          
 484          
 485          
 486          
 487          
 488          
 489          
C51 COMPILER V7.50   CHESHI                                                                12/14/2009 15:18:54 PAGE 9   

 490          
 491          
 492          
 493          
 494          
 495          
 496          
 497          
 498          
 499          
 500          
 501          
 502          
 503          
 504          
 505          
 506          
 507          
 508          
 509          
 510          
 511          
 512          
 513          
 514          
 515          
 516          
 517          
 518          
 519          
 520          
 521          
 522          
 523          
 524          
 525          
 526          
 527          
 528          
 529          
 530          
 531          
 532          
 533          
 534          
 535          
 536          
 537          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1492    ----
   CONSTANT SIZE    =    166    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62      25
   IDATA SIZE       =    105    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
