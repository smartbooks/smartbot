C51 COMPILER V9.00   _隹聿_量                                                              07/18/2017 11:40:48 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE _隹聿_量
OBJECT MODULE PLACED IN 脉宽测量.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 脉宽测量.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*SMC1602A(16*2)模拟口线接线方式
   2          连接线图:       
   3                 ---------------------------------------------------
   4                 |LCM-----51   |  LCM-----51   |  LCM------51      |
   5                 --------------------------------------------------|
   6                 |DB0-----P1.0 |  DB4-----P1.4 |  RW-------P3.4    |
   7                 |DB1-----P1.1 |  DB5-----P1.5 |  RS-------P3.3    |
   8                 |DB2-----P1.2 |  DB6-----P1.6 |  E--------P3.5    |
   9                 |DB3-----P1.3 |  DB7-----P1.7 |  VLCD接1K电阻到GND|
  10                 ---------------------------------------------------
  11          接线：模块TRIG接 P2.6  ECH0 接P2.7
  12          
  13          本程序源码只供学习参考，不得应用于商业用途，如有需要请联系作者。
  14          
  15          [注:AT89x51使用12M或11.0592M晶振,实测使用11.0592M]
  16          =============================================================*/
  17          #include <reg52.H>              //器件配置文件
  18          #include <intrins.h>
  19          sbit  RX=P2^7;
  20          sbit  TX=P2^6;
  21          
  22          sbit LCM_RW=P1^4; //定义LCD引脚
  23          sbit LCM_RS=P1^3;
  24          sbit LCM_E=P1^5;
  25          #define LCM_Data  P0
  26          
  27          sbit Key_Data=P2^0; //定义Keyboard引脚
  28          sbit Key_CLK=P3^2;
  29          
  30          #define Busy    0x80 //用于检测LCM状态字中的Busy标识
  31          
  32          void LCMInit(void);
  33          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData);
  34          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData);
  35          void Delay5Ms(void);
  36          void Delay400Ms(void);
  37          void Decode(unsigned char ScanCode);
  38          void WriteDataLCM(unsigned char WDLCM);
  39          void WriteCommandLCM(unsigned char WCLCM,BuysC);
  40          
  41          unsigned char ReadDataLCM(void);
  42          unsigned char ReadStatusLCM(void);
  43          unsigned char code mcustudio[] ={"mcustudio.com.cn"};
  44          unsigned char code email[] =    {"fhwxaoo@163.com "};
  45          unsigned char code Cls[] =      {"                "};
  46          unsigned char code ASCII[15] =    {'0','1','2','3','4','5','6','7','8','9','.','-','M'};
  47          
  48          static unsigned char DisNum = 0; //显示用指针                             
  49                 unsigned int  time=0;
  50                     unsigned long S=0;
  51                     bit      flag =0;
  52                     unsigned char disbuff[4]        ={ 0,0,0,0,};
  53          
  54          
  55          //写数据
C51 COMPILER V9.00   _隹聿_量                                                              07/18/2017 11:40:48 PAGE 2   

  56          void WriteDataLCM(unsigned char WDLCM) 
  57          {
  58   1              ReadStatusLCM(); //检测忙
  59   1              LCM_Data = WDLCM;
  60   1              LCM_RS = 1;
  61   1              LCM_RW = 0;
  62   1              LCM_E = 0; //若晶振速度太高可以在这后加小的延时
  63   1              LCM_E = 0; //延时
  64   1              LCM_E = 1;
  65   1      }
  66          
  67          //写指令
  68          void WriteCommandLCM(unsigned char WCLCM,BuysC) //BuysC为0时忽略忙检测
  69          {
  70   1              if (BuysC) ReadStatusLCM(); //根据需要检测忙
  71   1              LCM_Data = WCLCM;
  72   1              LCM_RS = 0;
  73   1              LCM_RW = 0;     
  74   1              LCM_E = 0;
  75   1              LCM_E = 0;
  76   1              LCM_E = 1;      
  77   1      }
  78          
  79          //读数据
  80          unsigned char ReadDataLCM(void)
  81          {
  82   1              LCM_RS = 1; 
  83   1              LCM_RW = 1;
  84   1              LCM_E = 0;
  85   1              LCM_E = 0;
  86   1              LCM_E = 1;
  87   1              return(LCM_Data);
  88   1      }
  89          
  90          //读状态
  91          unsigned char ReadStatusLCM(void)
  92          {
  93   1              LCM_Data = 0xFF; 
  94   1              LCM_RS = 0;
  95   1              LCM_RW = 1;
  96   1              LCM_E = 0;
  97   1              LCM_E = 0;
  98   1              LCM_E = 1;
  99   1              while (LCM_Data & Busy); //检测忙信号
 100   1              return(LCM_Data);
 101   1      }
 102          
 103          void LCMInit(void) //LCM初始化
 104          {
 105   1              LCM_Data = 0;
 106   1              WriteCommandLCM(0x38,0); //三次显示模式设置，不检测忙信号
 107   1              Delay5Ms(); 
 108   1              WriteCommandLCM(0x38,0);
 109   1              Delay5Ms(); 
 110   1              WriteCommandLCM(0x38,0);
 111   1              Delay5Ms(); 
 112   1      
 113   1              WriteCommandLCM(0x38,1); //显示模式设置,开始要求每次检测忙信号
 114   1              WriteCommandLCM(0x08,1); //关闭显示
 115   1              WriteCommandLCM(0x01,1); //显示清屏
 116   1              WriteCommandLCM(0x06,1); // 显示光标移动设置
 117   1              WriteCommandLCM(0x0F,1); // 显示开及光标设置
C51 COMPILER V9.00   _隹聿_量                                                              07/18/2017 11:40:48 PAGE 3   

 118   1      }
 119          
 120          //按指定位置显示一个字符
 121          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData)
 122          {
 123   1              Y &= 0x1;
 124   1              X &= 0xF; //限制X不能大于15，Y不能大于1
 125   1              if (Y) X |= 0x40; //当要显示第二行时地址码+0x40;
 126   1              X |= 0x80; //算出指令码
 127   1              WriteCommandLCM(X, 1); //发命令字
 128   1              WriteDataLCM(DData); //发数据
 129   1      }
 130          
 131          //按指定位置显示一串字符
 132          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData)
 133          {
 134   1              unsigned char ListLength;
 135   1      
 136   1        ListLength = 0;
 137   1              Y &= 0x1;
 138   1              X &= 0xF; //限制X不能大于15，Y不能大于1
 139   1              while (DData[ListLength]>0x19) //若到达字串尾则退出
 140   1                      {
 141   2                              if (X <= 0xF) //X坐标应小于0xF
 142   2                                      {
 143   3                                              DisplayOneChar(X, Y, DData[ListLength]); //显示单个字符
 144   3                                              ListLength++;
 145   3                                              X++;
 146   3                                      }
 147   2                      }
 148   1      }
 149          
 150          //5ms延时
 151          void Delay5Ms(void)
 152          {
 153   1              unsigned int TempCyc = 5552;
 154   1              while(TempCyc--);
 155   1      }
 156          
 157          //400ms延时
 158          void Delay400Ms(void)
 159          {
 160   1              unsigned char TempCycA = 5;
 161   1              unsigned int TempCycB;
 162   1              while(TempCycA--)
 163   1                      {
 164   2                              TempCycB=7269;
 165   2                              while(TempCycB--);
 166   2                      };
 167   1      }
 168          /********************************************************/
 169              void Conut(void)
 170                  {
 171   1               time=TH0*256+TL0;
 172   1               TH0=0;
 173   1               TL0=0;
 174   1              
 175   1               S=(time*1.7)/100;     //算出来是CM
 176   1               if((S>=700)||flag==1) //超出测量范围显示“-”
 177   1               {       
 178   2                flag=0;
 179   2               
C51 COMPILER V9.00   _隹聿_量                                                              07/18/2017 11:40:48 PAGE 4   

 180   2                DisplayOneChar(0, 1, ASCII[11]);
 181   2                DisplayOneChar(1, 1, ASCII[10]);      //显示点
 182   2                DisplayOneChar(2, 1, ASCII[11]);
 183   2                DisplayOneChar(3, 1, ASCII[11]);
 184   2                DisplayOneChar(4, 1, ASCII[12]);      //显示M
 185   2               }
 186   1               else
 187   1               {
 188   2                disbuff[0]=S%1000/100;
 189   2                disbuff[1]=S%1000%100/10;
 190   2                disbuff[2]=S%1000%10 %10;
 191   2                DisplayOneChar(0, 1, ASCII[disbuff[0]]);
 192   2                DisplayOneChar(1, 1, ASCII[10]);      //显示点
 193   2                DisplayOneChar(2, 1, ASCII[disbuff[1]]);
 194   2                DisplayOneChar(3, 1, ASCII[disbuff[2]]);
 195   2                DisplayOneChar(4, 1, ASCII[12]);      //显示M
 196   2               }
 197   1              }
 198          /********************************************************/
 199               void zd0() interrupt 1              //T0中断用来计数器溢出,超过测距范围
 200            {
 201   1          flag=1;                                                      //中断溢出标志
 202   1        }
 203          /********************************************************/
 204               void  StartModule()                         //启动模块
 205            {
 206   1                TX=1;                                      //启动一次模块
 207   1                _nop_(); 
 208   1                _nop_(); 
 209   1                _nop_(); 
 210   1                _nop_(); 
 211   1                _nop_(); 
 212   1                _nop_(); 
 213   1                _nop_(); 
 214   1                _nop_(); 
 215   1                _nop_(); 
 216   1                _nop_(); 
 217   1                _nop_(); 
 218   1                _nop_(); 
 219   1                _nop_(); 
 220   1                _nop_(); 
 221   1                _nop_(); 
 222   1                _nop_(); 
 223   1                _nop_();
 224   1                _nop_(); 
 225   1                _nop_(); 
 226   1                _nop_(); 
 227   1                _nop_();
 228   1                TX=0;
 229   1        }
 230          /********************************************************/ 
 231          void delayms(unsigned int ms)
 232          {
 233   1              unsigned char i=100,j;
 234   1              for(;ms;ms--)
 235   1              {
 236   2                      while(--i)
 237   2                      {
 238   3                              j=10;
 239   3                              while(--j);
 240   3                      }
 241   2              }
C51 COMPILER V9.00   _隹聿_量                                                              07/18/2017 11:40:48 PAGE 5   

 242   1      }
 243          /*********************************************************/
 244          void main(void)
 245          {
 246   1              unsigned char TempCyc;
 247   1              Delay400Ms(); //启动等待，等LCM讲入工作状态
 248   1              LCMInit(); //LCM初始化
 249   1              Delay5Ms(); //延时片刻(可不要)
 250   1              DisplayListChar(0, 0, mcustudio);
 251   1              DisplayListChar(0, 1, email);
 252   1              ReadDataLCM();//测试用句无意义
 253   1              for (TempCyc=0; TempCyc<10; TempCyc++)
 254   1              Delay400Ms(); //延时
 255   1              DisplayListChar(0, 1, Cls);     
 256   1              while(1)
 257   1              {
 258   2               TMOD=0x01;                //设T0为方式1，GATE=1；
 259   2               TH0=0;
 260   2               TL0=0;          
 261   2               ET0=1;             //允许T0中断
 262   2               EA=1;                     //开启总中断                 
 263   2              
 264   2              while(1)
 265   2                {
 266   3                   StartModule();
 267   3                      // DisplayOneChar(0, 1, ASCII[0]);
 268   3                   while(!RX);                //当RX为零时等待
 269   3                   TR0=1;                         //开启计数
 270   3                   while(RX);                 //当RX为1计数并等待
 271   3                   TR0=0;                             //关闭计数
 272   3               Conut();                       //计算
 273   3                       delayms(80);           //80MS
 274   3                       
 275   3                }
 276   2              }
 277   1      }
 278          
 279          
 280          
 281                          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    757    ----
   CONSTANT SIZE    =     66    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
