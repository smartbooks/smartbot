C51 COMPILER V8.02   MAIN                                                                  12/31/2010 18:08:09 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE MAIN.C LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include"config.h"
   3          #include"stdio.h"
   4          sbit led=P0^0;
   5          /*
   6          unsigned char xdata  re_send[100];
   7          void send_image(unsigned char *pic,unsigned char len)
   8          {
   9            unsigned int send_k=0;
  10            unsigned char temp1,temp2,temp3,a=0;
  11            unsigned char mode_rec=0;
  12            init_nrf24l01_io();
  13            while(1)
  14            {
  15            ifnnrf_rx_mode();
  16            IRQ=1;
  17            SPI_RW_Reg(WRITE_REG+STATUS,0xff);
  18            tx_buf[0]=0xaa;
  19            tx_buf[1]=0x55;
  20            tx_buf[2]=0xaa;
  21            tx_buf[3]=0x55;
  22            tx_buf[4]=0x01;
  23            tx_buf[5]=(len/256);
  24            tx_buf[6]=(len%256);
  25            ifnnrf_tx_mode();
  26            while(IRQ);
  27            sta=SPI_Read(STATUS);
  28            SPI_RW_Reg(WRITE_REG+STATUS,0xff);
  29            if(sta&STA_MARK_TX)
  30             {
  31                  com_printf("TX OK!",sta);
  32              break;
  33             }
  34            else
  35             {
  36                  com_printf("TX ER!",sta);
  37              ifnnrf_CLERN_ALL();
  38             }
  39            }
  40            while(1)
  41            {
  42            ifnnrf_rx_mode();
  43            ifnnrf_CLERN_ALL();
  44            while(IRQ==0);
  45            _delay_us(1000);
  46            if(IRQ==0)
  47             {
  48                  sta=SPI_Read(STATUS);
  49                  SPI_RW_Reg(WRITE_REG+STATUS,0xff);
  50                  if(sta&STA_MARK_RX)
  51                    {
  52                     SPI_Read_Buf(RD_RX_PLOAD,rx_buf,TX_PLOAD_WIDTH);// read receive payload from RX_FIFO buffer;
  53                 if((rx_buf[0]==0xaa)&&(rx_buf[1]==0x55)&&(rx_buf[2]==0xaa)&&(rx_buf[3]==0x55)&&(rx_buf[0]==0x01))
  54                 break;
  55                    }
C51 COMPILER V8.02   MAIN                                                                  12/31/2010 18:08:09 PAGE 2   

  56              } 
  57             }
  58             while(1)
  59             {
  60              IRQ=1;
  61              SPI_RW_Reg(WRITE_REG+STATUS,0xff);
  62              tx_buf[0]=(send_k/256);
  63              tx_buf[1]=(send_k%256);
  64                  for(a=0;a<30;a++)
  65                  tx_buf[a+2]=*(pic+send_k*30+a);
  66              ifnnrf_tx_mode();
  67              while(IRQ);
  68                  if(send_k*30<len)
  69                  send_k++;
  70                  else
  71                  break;
  72             }
  73              while(1)
  74              {
  75                    ifnnrf_rx_mode();
  76                    ifnnrf_CLERN_ALL();
  77                    while(IRQ==0);
  78                    _delay_us(1000);
  79                    if(IRQ==0)
  80                     {
  81                          sta=SPI_Read(STATUS);
  82                          SPI_RW_Reg(WRITE_REG+STATUS,0xff);
  83                          if(sta&STA_MARK_RX)
  84                            {
  85                             SPI_Read_Buf(RD_RX_PLOAD,rx_buf,TX_PLOAD_WIDTH);// read receive payload from RX_FIFO buffer;
  86                         if((rx_buf[0]==0xaa)&&(rx_buf[1]==0x55)&&(rx_buf[2]==0xaa)&&(rx_buf[3]==0x55)&&(rx_buf[4]==0x02))
  87                             {
  88                     mode_rec=rx_buf[4];
  89                         break;
  90                             }
  91                            }
  92                      } 
  93               }
  94          
  95                  while(temp2<mode_rec)
  96              {
  97                    ifnnrf_rx_mode();
  98                    ifnnrf_CLERN_ALL();
  99                    while(IRQ==0);
 100                    _delay_us(1000);
 101                    if(IRQ==0)
 102                     {
 103                          sta=SPI_Read(STATUS);
 104                          SPI_RW_Reg(WRITE_REG+STATUS,0xff);
 105                          if(sta&STA_MARK_RX)
 106                            {
 107                             SPI_Read_Buf(RD_RX_PLOAD,rx_buf,TX_PLOAD_WIDTH);// read receive payload from RX_FIFO buffer;
 108                     for(temp1=0;temp1<30;temp1++)
 109                             re_send[temp2+temp1]=rx_buf[temp1];
 110                            }
 111                      } 
 112               }
 113             while(temp3<mode_rec)
 114             {
 115             
 116             while(1)
 117             {
C51 COMPILER V8.02   MAIN                                                                  12/31/2010 18:08:09 PAGE 3   

 118              IRQ=1;
 119              SPI_RW_Reg(WRITE_REG+STATUS,0xff);
 120              tx_buf[0]=0;
 121              tx_buf[1]=temp3;
 122                  for(a=0;a<30;a++)
 123                  tx_buf[a+2]=*(pic+re_send[temp3]*30+a);
 124              ifnnrf_tx_mode();
 125              while(IRQ);
 126                  if(send_k*30<len)
 127                  send_k++;
 128                  else
 129                  break;
 130             }
 131             temp3++;
 132             }
 133           
 134                 
 135          }       
 136          */  
 137          main()
 138          {
 139   1        unsigned char i=0;
 140   1      
 141   1        unsigned int count_send=0;
 142   1        unsigned int rec_new=0;
 143   1        unsigned int rec_old=0;
 144   1        unsigned int rec_err=0;
 145   1        unsigned int lock_key=0;
 146   1      
 147   1        init_cpu();
 148   1      
 149   1        init_nrf24l01_io();
 150   1      
 151   1        for(i=0;i<32;i++)
 152   1        {
 153   2          tx_buf[i]=i;
 154   2        }
 155   1        TI=1;
 156   1        printf("hello world");
 157   1        printf("hello world");
 158   1        ifnnrf_rx_mode();
 159   1      
 160   1        while(1)
 161   1        {
 162   2      
 163   2           KEY=1;
 164   2           while(KEY==0)
 165   2               {
 166   3                 IRQ=1;
 167   3                 SPI_RW_Reg(WRITE_REG+STATUS,0xff);
 168   3                 count_send++;
 169   3                 tx_buf[30]=count_send/256;
 170   3                 tx_buf[31]=count_send%256;
 171   3                 ifnnrf_tx_mode();
 172   3                 while(IRQ);
 173   3                 sta=SPI_Read(STATUS);
 174   3                 SPI_RW_Reg(WRITE_REG+STATUS,0xff);
 175   3                 if(sta&STA_MARK_TX)
 176   3                 {
 177   4              if((count_send%100)==0)
 178   4                      {
 179   5                      TI=1;
C51 COMPILER V8.02   MAIN                                                                  12/31/2010 18:08:09 PAGE 4   

 180   5              printf("TX OK!%d\n\t",count_send);
 181   5                      }
 182   4                 }
 183   3                 else
 184   3                 {
 185   4                      TI=1;
 186   4              printf("TX ER!%2XH\n\t",sta);
 187   4              ifnnrf_CLERN_ALL();
 188   4                 }
 189   3                 lock_key=1;
 190   3      
 191   3               }      //发送
 192   2               if(lock_key)
 193   2               {
 194   3               lock_key=0;
 195   3               ifnnrf_rx_mode();
 196   3               IRQ=1;
 197   3               while(IRQ==0);
 198   3               _delay_us(400);
 199   3               }
 200   2               //ifnnrf_rx_mode();  每次都切换到输入 要过一段时间才能正常接收，而对方在一直发送，在发送过来后，这里还没
             -初始化完，于是数据错误
 201   2             //ifnnrf_CLERN_ALL();
 202   2               IRQ=1;
 203   2               if(IRQ==0)
 204   2               {
 205   3                
 206   3                sta=SPI_Read(STATUS);
 207   3                SPI_RW_Reg(WRITE_REG+STATUS,0xff);
 208   3                
 209   3                 if(sta&STA_MARK_RX)
 210   3                 {
 211   4      
 212   4                   SPI_Read_Buf(RD_RX_PLOAD,rx_buf,TX_PLOAD_WIDTH);// read receive payload from RX_FIFO buffer;
 213   4                   rec_new=(rx_buf[30]*256+rx_buf[31]);
 214   4                       if(rec_new==(rec_old+1)) 
 215   4                       {
 216   5                          P2=0XFF;
 217   5                              if((rec_new%100)==0)
 218   5                              {
 219   6                              TI=1;
 220   6                      printf("RX OK!%d\n\t",rec_new);
 221   6                              }
 222   5                          rec_old=rec_new;
 223   5                          P2=0X00;
 224   5                       }
 225   4      
 226   4                       else
 227   4                       {
 228   5                          rec_err+=1;
 229   5                          rec_old=rec_new;
 230   5                              TI=1;
 231   5                      printf("RX ER!%d\n\t",rec_err);
 232   5                       }
 233   4                 }
 234   3                 else
 235   3                 {
 236   4                   ifnnrf_CLERN_ALL();
 237   4                   ifnnrf_rx_mode();
 238   4                   IRQ=1;
 239   4                   while(IRQ==0);
 240   4                 }
C51 COMPILER V8.02   MAIN                                                                  12/31/2010 18:08:09 PAGE 5   

 241   3               } //接收
 242   2                
 243   2        }
 244   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    482    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
