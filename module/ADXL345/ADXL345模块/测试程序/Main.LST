C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2           * ADXL345模块
   3           * 
   4           * 用途：ADXL345模块IIC测试程序
   5           * 
   6           * 作者                                 日期                            备注
   7           * Huafeng Lin                  2010/12/10                      新增
   8           * Huafeng Lin                  2010/12/11                      修改
   9           * 
  10           */
  11          
  12          #include  <REG51.H>     
  13          #include  <math.h>    //Keil library  
  14          #include  <stdio.h>   //Keil library    
  15          #include  <INTRINS.H>
  16          #define   uchar unsigned char
  17          #define   uint unsigned int     
  18          #define   DataPort P2    //LCD1602数据端口
  19          sbit      SCL=P0^4;      //IIC时钟引脚定义
  20          sbit      SDA=P0^3;      //IIC数据引脚定义
  21          sbit      LCM_RS=P0^2;   //LCD1602命令端口              
  22          sbit      LCM_RW=P0^1;   //LCD1602命令端口              
  23          sbit      LCM_EN=P0^0;   //LCD1602命令端口
  24          
  25          #define SlaveAddress   0xA6       //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
  26                                        //ALT  ADDRESS引脚接地时地址为0xA6，接电源时地址为0x3A
  27          typedef unsigned char  BYTE;
  28          typedef unsigned short WORD;
  29          
  30          BYTE BUF[8];                         //接收数据缓存区           
  31          uchar ge,shi,bai,qian,wan;           //显示变量
  32          int  dis_data;                       //变量
  33          
  34          void delay(unsigned int k);
  35          void InitLcd();                      //初始化lcd1602
  36          void Init_ADXL345(void);             //初始化ADXL345
  37          
  38          void WriteDataLCM(uchar dataW);
  39          void WriteCommandLCM(uchar CMD,uchar Attribc);
  40          void DisplayOneChar(uchar X,uchar Y,uchar DData);
  41          void conversion(uint temp_data);
  42          
  43          void  Single_Write_ADXL345(uchar REG_Address,uchar REG_data);   //单个写入数据
  44          uchar Single_Read_ADXL345(uchar REG_Address);                   //单个读取内部寄存器数据
  45          void  Multiple_Read_ADXL345();                                  //连续的读取内部寄存器数据
  46          //------------------------------------
  47          void Delay5us();
  48          void Delay5ms();
  49          void ADXL345_Start();
  50          void ADXL345_Stop();
  51          void ADXL345_SendACK(bit ack);
  52          bit  ADXL345_RecvACK();
  53          void ADXL345_SendByte(BYTE dat);
  54          BYTE ADXL345_RecvByte();
  55          void ADXL345_ReadPage();
C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 2   

  56          void ADXL345_WritePage();
  57          //-----------------------------------
  58          
  59          //*********************************************************
  60          void conversion(uint temp_data)  
  61          {  
  62   1          wan=temp_data/10000+0x30 ;
  63   1          temp_data=temp_data%10000;   //取余运算
  64   1              qian=temp_data/1000+0x30 ;
  65   1          temp_data=temp_data%1000;    //取余运算
  66   1          bai=temp_data/100+0x30   ;
  67   1          temp_data=temp_data%100;     //取余运算
  68   1          shi=temp_data/10+0x30    ;
  69   1          temp_data=temp_data%10;      //取余运算
  70   1          ge=temp_data+0x30;  
  71   1      }
  72          
  73          /*******************************/
  74          void delay(unsigned int k)      
  75          {                                               
  76   1      unsigned int i,j;                               
  77   1      for(i=0;i<k;i++)
  78   1      {                       
  79   2      for(j=0;j<121;j++)                      
  80   2      {;}}                                            
  81   1      }
  82          /*******************************/
  83          void WaitForEnable(void)        
  84          {                                       
  85   1      DataPort=0xff;          
  86   1      LCM_RS=0;LCM_RW=1;_nop_();
  87   1      LCM_EN=1;_nop_();_nop_();
  88   1      while(DataPort&0x80);   
  89   1      LCM_EN=0;                               
  90   1      }                                       
  91          /*******************************/
  92          void WriteCommandLCM(uchar CMD,uchar Attribc)
  93          {                                       
  94   1      if(Attribc)WaitForEnable();     
  95   1      LCM_RS=0;LCM_RW=0;_nop_();
  96   1      DataPort=CMD;_nop_();   
  97   1      LCM_EN=1;_nop_();_nop_();LCM_EN=0;
  98   1      }                                       
  99          /*******************************/
 100          void WriteDataLCM(uchar dataW)
 101          {                                       
 102   1      WaitForEnable();                
 103   1      LCM_RS=1;LCM_RW=0;_nop_();
 104   1      DataPort=dataW;_nop_(); 
 105   1      LCM_EN=1;_nop_();_nop_();LCM_EN=0;
 106   1      }               
 107          /***********************************/
 108          void InitLcd()                          
 109          {                       
 110   1      WriteCommandLCM(0x38,1);        
 111   1      WriteCommandLCM(0x08,1);        
 112   1      WriteCommandLCM(0x01,1);        
 113   1      WriteCommandLCM(0x06,1);        
 114   1      WriteCommandLCM(0x0c,1);
 115   1      }                       
 116          /***********************************/
 117          void DisplayOneChar(uchar X,uchar Y,uchar DData)
C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 3   

 118          {                                               
 119   1      Y&=1;                                           
 120   1      X&=15;                                          
 121   1      if(Y)X|=0x40;                                   
 122   1      X|=0x80;                        
 123   1      WriteCommandLCM(X,0);           
 124   1      WriteDataLCM(DData);            
 125   1      }                                               
 126          
 127          /**************************************
 128          延时5微秒(STC90C52RC@12M)
 129          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
 130          当改用1T的MCU时,请调整此延时函数
 131          **************************************/
 132          void Delay5us()
 133          {
 134   1          _nop_();_nop_();_nop_();_nop_();
 135   1          _nop_();_nop_();_nop_();_nop_();
 136   1              _nop_();_nop_();_nop_();_nop_();
 137   1      }
 138          
 139          /**************************************
 140          延时5毫秒(STC90C52RC@12M)
 141          不同的工作环境,需要调整此函数
 142          当改用1T的MCU时,请调整此延时函数
 143          **************************************/
 144          void Delay5ms()
 145          {
 146   1          WORD n = 560;
 147   1      
 148   1          while (n--);
 149   1      }
 150          
 151          /**************************************
 152          起始信号
 153          **************************************/
 154          void ADXL345_Start()
 155          {
 156   1          SDA = 1;                    //拉高数据线
 157   1          SCL = 1;                    //拉高时钟线
 158   1          Delay5us();                 //延时
 159   1          SDA = 0;                    //产生下降沿
 160   1          Delay5us();                 //延时
 161   1          SCL = 0;                    //拉低时钟线
 162   1      }
 163          
 164          /**************************************
 165          停止信号
 166          **************************************/
 167          void ADXL345_Stop()
 168          {
 169   1          SDA = 0;                    //拉低数据线
 170   1          SCL = 1;                    //拉高时钟线
 171   1          Delay5us();                 //延时
 172   1          SDA = 1;                    //产生上升沿
 173   1          Delay5us();                 //延时
 174   1      }
 175          
 176          /**************************************
 177          发送应答信号
 178          入口参数:ack (0:ACK 1:NAK)
 179          **************************************/
C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 4   

 180          void ADXL345_SendACK(bit ack)
 181          {
 182   1          SDA = ack;                  //写应答信号
 183   1          SCL = 1;                    //拉高时钟线
 184   1          Delay5us();                 //延时
 185   1          SCL = 0;                    //拉低时钟线
 186   1          Delay5us();                 //延时
 187   1      }
 188          
 189          /**************************************
 190          接收应答信号
 191          **************************************/
 192          bit ADXL345_RecvACK()
 193          {
 194   1          SCL = 1;                    //拉高时钟线
 195   1          Delay5us();                 //延时
 196   1          CY = SDA;                   //读应答信号
 197   1          SCL = 0;                    //拉低时钟线
 198   1          Delay5us();                 //延时
 199   1      
 200   1          return CY;
 201   1      }
 202          
 203          /**************************************
 204          向IIC总线发送一个字节数据
 205          **************************************/
 206          void ADXL345_SendByte(BYTE dat)
 207          {
 208   1          BYTE i;
 209   1      
 210   1          for (i=0; i<8; i++)         //8位计数器
 211   1          {
 212   2              dat <<= 1;              //移出数据的最高位
 213   2              SDA = CY;               //送数据口
 214   2              SCL = 1;                //拉高时钟线
 215   2              Delay5us();             //延时
 216   2              SCL = 0;                //拉低时钟线
 217   2              Delay5us();             //延时
 218   2          }
 219   1          ADXL345_RecvACK();
 220   1      }
 221          
 222          /**************************************
 223          从IIC总线接收一个字节数据
 224          **************************************/
 225          BYTE ADXL345_RecvByte()
 226          {
 227   1          BYTE i;
 228   1          BYTE dat = 0;
 229   1      
 230   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 231   1          for (i=0; i<8; i++)         //8位计数器
 232   1          {
 233   2              dat <<= 1;
 234   2              SCL = 1;                //拉高时钟线
 235   2              Delay5us();             //延时
 236   2              dat |= SDA;             //读数据               
 237   2              SCL = 0;                //拉低时钟线
 238   2              Delay5us();             //延时
 239   2          }
 240   1          return dat;
 241   1      }
C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 5   

 242          
 243          //******单字节写入*******************************************
 244          
 245          void Single_Write_ADXL345(uchar REG_Address,uchar REG_data)
 246          {
 247   1          ADXL345_Start();                  //起始信号
 248   1          ADXL345_SendByte(SlaveAddress);   //发送设备地址+写信号
 249   1          ADXL345_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 250   1          ADXL345_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 251   1          ADXL345_Stop();                   //发送停止信号
 252   1      }
 253          
 254          //********单字节读取*****************************************
 255          uchar Single_Read_ADXL345(uchar REG_Address)
 256          {  uchar REG_data;
 257   1          ADXL345_Start();                          //起始信号
 258   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 259   1          ADXL345_SendByte(REG_Address);            //发送存储单元地址，从0开始       
 260   1          ADXL345_Start();                          //起始信号
 261   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 262   1          REG_data=ADXL345_RecvByte();              //读出寄存器数据
 263   1              ADXL345_SendACK(1);   
 264   1              ADXL345_Stop();                           //停止信号
 265   1          return REG_data; 
 266   1      }
 267          //*********************************************************
 268          //
 269          //连续读出ADXL345内部加速度数据，地址范围0x32~0x37
 270          //
 271          //*********************************************************
 272          void Multiple_read_ADXL345(void)
 273          {   uchar i;
 274   1          ADXL345_Start();                          //起始信号
 275   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 276   1          ADXL345_SendByte(0x32);                   //发送存储单元地址，从0x32开始    
 277   1          ADXL345_Start();                          //起始信号
 278   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 279   1               for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 280   1          {
 281   2              BUF[i] = ADXL345_RecvByte();          //BUF[0]存储0x32地址中的数据
 282   2              if (i == 5)
 283   2              {
 284   3                 ADXL345_SendACK(1);                //最后一个数据需要回NOACK
 285   3              }
 286   2              else
 287   2              {
 288   3                ADXL345_SendACK(0);                //回应ACK
 289   3             }
 290   2         }
 291   1          ADXL345_Stop();                          //停止信号
 292   1          Delay5ms();
 293   1      }
 294          
 295          
 296          //*****************************************************************
 297          
 298          //初始化ADXL345，根据需要请参考pdf进行修改************************
 299          void Init_ADXL345()
 300          {
 301   1         Single_Write_ADXL345(0x31,0x0B);   //测量范围,正负16g，13位模式
 302   1         Single_Write_ADXL345(0x2C,0x08);   //速率设定为12.5 参考pdf13页
 303   1         Single_Write_ADXL345(0x2D,0x08);   //选择电源模式   参考pdf24页
C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 6   

 304   1         Single_Write_ADXL345(0x2E,0x80);   //使能 DATA_READY 中断
 305   1         Single_Write_ADXL345(0x1E,0x00);   //X 偏移量 根据测试传感器的状态写入pdf29页
 306   1         Single_Write_ADXL345(0x1F,0x00);   //Y 偏移量 根据测试传感器的状态写入pdf29页
 307   1         Single_Write_ADXL345(0x20,0x05);   //Z 偏移量 根据测试传感器的状态写入pdf29页
 308   1      }
 309          //***********************************************************************
 310          //显示x轴
 311          void display_x()
 312          {   float temp;
 313   1          dis_data=(BUF[1]<<8)+BUF[0];  //合成数据   
 314   1              if(dis_data<0){
 315   2              dis_data=-dis_data;
 316   2          DisplayOneChar(10,0,'-');      //显示正负符号位
 317   2              }
 318   1              else DisplayOneChar(10,0,' '); //显示空格
 319   1      
 320   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 321   1          conversion(temp);          //转换出显示需要的数据
 322   1              DisplayOneChar(8,0,'X');
 323   1          DisplayOneChar(9,0,':'); 
 324   1          DisplayOneChar(11,0,qian); 
 325   1              DisplayOneChar(12,0,'.'); 
 326   1          DisplayOneChar(13,0,bai); 
 327   1          DisplayOneChar(14,0,shi); 
 328   1              DisplayOneChar(15,0,' '); 
 329   1      }
 330          
 331          //***********************************************************************
 332          //显示y轴
 333          void display_y()
 334          {     float temp;
 335   1          dis_data=(BUF[3]<<8)+BUF[2];  //合成数据   
 336   1              if(dis_data<0){
 337   2              dis_data=-dis_data;
 338   2          DisplayOneChar(2,1,'-');      //显示正负符号位
 339   2              }
 340   1              else DisplayOneChar(2,1,' '); //显示空格
 341   1      
 342   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 343   1          conversion(temp);          //转换出显示需要的数据
 344   1              DisplayOneChar(0,1,'Y');   //第1行，第0列 显示y
 345   1          DisplayOneChar(1,1,':'); 
 346   1          DisplayOneChar(3,1,qian); 
 347   1              DisplayOneChar(4,1,'.'); 
 348   1          DisplayOneChar(5,1,bai); 
 349   1          DisplayOneChar(6,1,shi);  
 350   1              DisplayOneChar(7,1,' ');  
 351   1      }
 352          
 353          //***********************************************************************
 354          //显示z轴
 355          void display_z()
 356          {
 357   1          float temp;
 358   1          dis_data=(BUF[5]<<8)+BUF[4];    //合成数据   
 359   1              if(dis_data<0){
 360   2              dis_data=-dis_data;
 361   2          DisplayOneChar(10,1,'-');       //显示负符号位
 362   2              }
 363   1              else DisplayOneChar(10,1,' ');  //显示空格
 364   1      
 365   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
C51 COMPILER V9.01   MAIN                                                                  06/11/2011 00:02:44 PAGE 7   

 366   1          conversion(temp);          //转换出显示需要的数据
 367   1              DisplayOneChar(8,1,'Z');  //第0行，第10列 显示Z
 368   1          DisplayOneChar(9,1,':'); 
 369   1          DisplayOneChar(11,1,qian); 
 370   1              DisplayOneChar(12,1,'.'); 
 371   1          DisplayOneChar(13,1,bai); 
 372   1          DisplayOneChar(14,1,shi); 
 373   1              DisplayOneChar(15,1,' ');  
 374   1      }
 375          
 376          
 377          //*********************************************************
 378          //******主程序********
 379          //*********************************************************
 380          void main()
 381          { 
 382   1              uchar devid;
 383   1              delay(500);                             //上电延时              
 384   1              InitLcd();                      //液晶初始化ADXL345
 385   1              
 386   1              DisplayOneChar(0,0,'A');
 387   1              DisplayOneChar(1,0,'D'); 
 388   1              DisplayOneChar(2,0,'X'); 
 389   1              DisplayOneChar(3,0,'L'); 
 390   1              DisplayOneChar(4,0,'3'); 
 391   1              DisplayOneChar(5,0,'4');  
 392   1              DisplayOneChar(6,0,'5'); 
 393   1              
 394   1              Init_ADXL345();                         //初始化ADXL345
 395   1              devid=Single_Read_ADXL345(0X00);        //读出的数据为0XE5,表示正确
 396   1              while(1)                                //循环
 397   1              { 
 398   2                      Multiple_Read_ADXL345();        //连续读出数据，存储在BUF中
 399   2                      display_x();                    //---------显示X轴
 400   2                      display_y();                    //---------显示Y轴
 401   2                      display_z();                    //---------显示Z轴
 402   2                      delay(200);                     //延时            
 403   2              }
 404   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1015    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
